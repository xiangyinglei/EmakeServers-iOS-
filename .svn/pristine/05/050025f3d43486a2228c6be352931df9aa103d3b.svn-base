//
//  BaseViewController.m
//  EmakeServers
//
//  Created by 谷伟 on 2018/1/31.
//  Copyright © 2018年 谷伟. All rights reserved.
//

#import "BaseViewController.h"
#import "Header.h"
#import "YHMessageListViewController.h"
#import "YHUserMainViewController.h"
#import "YHMineViewController.h"
#import "ChatNewViewController.h"
#import "YHFileModel.h"
#import "MQTTCommandModel.h"
#import "YHChatContractModel.h"
#import "ChatVoiceModel.h"
@interface BaseViewController ()<YHMQTTClientDelegate,YBPopupMenuDelegate>
@property (nonatomic, strong) UIButton * rightNavBtn;
@property (nonatomic, strong) UIButton * backButton;
@property (nonatomic, retain) NSArray * Titles;
@property (nonatomic, retain) NSArray * ICONS;
@property (nonatomic, strong) UIButton * informationCardBtn;
@property (nonatomic, assign) CGFloat widthDrop;
@end

@implementation BaseViewController
- (UIButton *)backButton
{
    if (_backButton == nil) {
        _backButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [_backButton setImage:[UIImage imageNamed:@"direction_leftNew"] forState:UIControlStateNormal];
        _backButton.frame = CGRectMake(-0, 0, 40, 40);
        _backButton.imageEdgeInsets = UIEdgeInsetsMake(0, -10, 0, 10 );
        [_backButton addTarget:self action:@selector(back:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _backButton;
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [YHMQTTClient sharedClient].delegate = self;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    if (@available(iOS 11.0, *)){
    }else{
        self.automaticallyAdjustsScrollViewInsets = NO;
    }
    [self layoutCustomNavigationBar];
}
- (void)layoutCustomNavigationBar{
    
    [self.navigationController.navigationBar setBarTintColor:[UIColor colorWithHexString:StatusAndTopBarBackgroundColor]];
    //navbar背景
    UINavigationBar *navBar = [UINavigationBar appearance];
    [navBar setBackgroundColor:[UIColor colorWithHexString:StatusAndTopBarBackgroundColor]];
    
    self.navigationController.navigationBar.titleTextAttributes = @{NSForegroundColorAttributeName:[UIColor blackColor],NSFontAttributeName : [UIFont boldSystemFontOfSize:16]};
    //去除边框
    //    [self.navigationController.navigationBar setBackgroundImage:[[UIImage alloc] init] forBarPosition:UIBarPositionAny barMetrics:UIBarMetricsDefault];
    //    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:self.backButton];
}
- (void)back:(UIButton *)button
{
    [self.navigationController popViewControllerAnimated:YES];
}
- (UIToolbar *)addToolbar
{
    UIToolbar *toolbar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 0, ScreenWidth, 35)];
    toolbar.tintColor = [UIColor blueColor];
    toolbar.backgroundColor = [UIColor whiteColor];
    UIBarButtonItem *space = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *bar = [[UIBarButtonItem alloc] initWithTitle:@"完成" style:UIBarButtonItemStylePlain target:self action:@selector(textFieldDone)];
    toolbar.items = @[space, bar];
    return toolbar;
}
- (void)textFieldDone{
    
    [self.view endEditing:YES];
}
- (void)addRightNavBtn:(NSString *)title{
    self.rightNavBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    self.rightNavBtn.frame = CGRectMake(20, 0, 30, 30);
    [self.rightNavBtn setTitle:title forState:UIControlStateNormal];
    self.rightNavBtn.titleLabel.font = SYSTEM_FONT(AdaptFont(13));
    [self.rightNavBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    self.rightNavBtn.imageEdgeInsets = UIEdgeInsetsMake(0, 10, 0, 0 );
    [self.rightNavBtn addTarget:self action:@selector(rightBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:self.rightNavBtn];
    
}
- (void)setRightBtnTitle:(NSString *)title{
    
    [self.rightNavBtn setTitle:title forState:UIControlStateNormal];
}
- (void)rightBtnClick:(UIButton *)sender{
    
}
- (void)leftDropBtnStyleClick:(UIButton *)sender{
    
}
- (void)changeLeftDropBtnStyleTitle:(NSString *)title{
    for (UIBarButtonItem *item in self.navigationItem.rightBarButtonItems) {
        if (item.tag == 102) {
            if ([item.customView isKindOfClass:[UIButton class]]) {
                UIButton *button = (UIButton *)item.customView;
                [button setTitle:title forState:UIControlStateNormal];
            }
            break;
        }
    }
}
- (void)addRigthDropBtn{
    self.widthDrop = WidthRate(120);
    self.Titles =  @[@"消息", @"平台", @"我"];
    self.ICONS =  @[@"xiaoxi-xiala",@"pingtai-xiala",@"wo-xiala"];
    self.informationCardBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.informationCardBtn setImage:[UIImage imageNamed:@"xiaoxi-r"] forState:UIControlStateNormal];
    [self.informationCardBtn addTarget:self action:@selector(showMenuView) forControlEvents:UIControlEventTouchUpInside];
    [self.informationCardBtn sizeToFit];
    
    UIBarButtonItem *informationCardItem = [[UIBarButtonItem alloc] initWithCustomView:self.informationCardBtn];
    informationCardItem.tag = 100;
    UIBarButtonItem *fixedSpaceBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fixedSpaceBarButtonItem.width = WidthRate(5);
    fixedSpaceBarButtonItem.tag = 101;
    
    UIButton *settingBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    settingBtn.hidden = false;
    [settingBtn sizeToFit];
    UIBarButtonItem *settingBtnItem = [[UIBarButtonItem alloc] initWithCustomView:settingBtn];
    settingBtnItem.tag = 102;
    self.navigationItem.rightBarButtonItems  = @[informationCardItem,fixedSpaceBarButtonItem,settingBtnItem];
}
- (void)addRigthDropBtnAndLeftTitle:(NSString *)tilte{
    self.widthDrop = WidthRate(150);
    self.Titles =  @[@"咨询转移", @"归档消息", @"订单列表", @"结束咨询"];
    self.ICONS =  @[@"zixunzhuanyi",@"guidangxiaoxi",@"dingdanliebiao",@"jieshuzixun"];
    self.informationCardBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.informationCardBtn setImage:[UIImage imageNamed:@"gengduo"] forState:UIControlStateNormal];
    [self.informationCardBtn addTarget:self action:@selector(showMenuView) forControlEvents:UIControlEventTouchUpInside];
    [self.informationCardBtn sizeToFit];
    
    UIBarButtonItem *informationCardItem = [[UIBarButtonItem alloc] initWithCustomView:self.informationCardBtn];
    informationCardItem.tag = 100;
    UIBarButtonItem *fixedSpaceBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fixedSpaceBarButtonItem.width = WidthRate(5);
    fixedSpaceBarButtonItem.tag = 101;
    
    UIButton *settingBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [settingBtn setTitle:tilte forState:UIControlStateNormal];
    [settingBtn setTitleColor:ColorWithHexString(APP_THEME_MAIN_COLOR) forState:UIControlStateNormal];
    settingBtn.titleLabel.font = SYSTEM_FONT(AdaptFont(13));
    [settingBtn addTarget:self action:@selector(leftDropBtnStyleClick:) forControlEvents:UIControlEventTouchUpInside];
    [settingBtn sizeToFit];
    UIBarButtonItem *settingBtnItem = [[UIBarButtonItem alloc] initWithCustomView:settingBtn];
    settingBtnItem.tag = 102;
    self.navigationItem.rightBarButtonItems  = @[informationCardItem,fixedSpaceBarButtonItem,settingBtnItem];
}

- (void)showMenuView{
    
    [YBPopupMenu showRelyOnView:self.informationCardBtn titles:self.Titles icons:self.ICONS menuWidth:self.widthDrop messgaeCount:0  delegate:self];
}
- (void)ybPopupMenuDidSelectedAtIndex:(NSInteger)index ybPopupMenu:(YBPopupMenu *)ybPopupMenu{
    switch (index) {
            //回到消息
        case 0:
            for (UIViewController *vc in self.navigationController.viewControllers) {
                if ([vc isKindOfClass:[YHMessageListViewController class]]) {
                    [self.navigationController popToViewController:vc animated:YES];
                }
            }
            self.tabBarController.selectedIndex = 0;
            [self.navigationController popToRootViewControllerAnimated:YES];
            
            break;
            //回到平台
        case 1:{
            for (UIViewController *vc in self.navigationController.viewControllers) {
                if ([vc isKindOfClass:[YHUserMainViewController class]]) {
                    
                    [self.navigationController popToViewController:vc animated:YES];
                    
                }
            }
            self.tabBarController.selectedIndex = 1;
            [self.navigationController popToRootViewControllerAnimated:YES];
    
            break;
        }
            break;
        case 2:{
            self.tabBarController.selectedIndex = 2;
            [self.navigationController popToRootViewControllerAnimated:YES];
        }
            break;
        default:
            break;
    }
}
- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
    
    [self.view endEditing:YES];
}
#pragma mark========YHMQTTClientDelegate
-(void)onMessgae:(NSData *)messgae topic:(NSString *)topic{
    if (messgae) {
        NSDictionary *payload = [NSJSONSerialization JSONObjectWithData:messgae options:0 error:nil];
        BOOL isContain = false;
        chatNewModel *model = [chatNewModel mj_objectWithKeyValues:payload];
        chatBodyModel *body = [chatBodyModel mj_objectWithKeyValues:model.MessageBody];
        chatUserModel *form = [chatUserModel mj_objectWithKeyValues:model.From];
        if (form.PhoneNumber.length <=0||form.PhoneNumber == nil) {
            NSArray *arr = [topic componentsSeparatedByString:@"/"];
            if (arr.count < 2) {
                return;
            }
            NSString *user_id = arr[1];
            if ([[FMDBManager sharedManager] userChatDataIsExist:user_id]){
                if ([[FMDBManager sharedManager] messageIsAlreadyExist:user_id withMessageId:model.MessageID]) {
                    return;
                }
            }
        }else{
            if ([[FMDBManager sharedManager] userChatDataIsExist:form.UserId]){
                if (![[FMDBManager sharedManager] messageIsAlreadyExist:form.UserId withMessageId:model.MessageID]) {
                    return;
                }
            }
        }
        if ([body.Type isEqualToString:@"Text"]) {
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:body.Text];
        }else if ([body.Type isEqualToString:@"Image"]){
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:@"[图片]"];
        }else if ([body.Type isEqualToString:@"Order"]){
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:@"[订单]"];
        }else if ([body.Type isEqualToString:@"MutilePart"]){
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:@"[合同]"];
        }else if ([body.Type isEqualToString:@"Goods"]){
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:@"[商品]"];
        }else if ([body.Type isEqualToString:@"Voice"]){
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:@"[语音]"];
        }else if ([body.Type isEqualToString:@"File"]){
            [[JZUserNotification sharedNotification] addNotificationWithCategroy1:@"[文件]"];
        }
        for (UIViewController *vc in self.navigationController.viewControllers) {
            if ([vc isKindOfClass:[ChatNewViewController class]]) {
                ChatNewViewController *chatVC = (ChatNewViewController *)vc;
                if (!chatVC.isLookUpArchive) {
                    [chatVC onMessgae:messgae topic:topic];
                    isContain = true;
                    break;
                }
            }
        }
        if (!isContain) {
            [self addMessageToFMDB:payload topic:topic];
        }
    }
}
- (void)onEvent:(MQTTMessage *)messgae topic:(NSString *)topic{
    
}
- (void)onCommand:(NSData *)messgae topic:(NSString *)topic{
    
    NSDictionary *payload = [NSJSONSerialization JSONObjectWithData:messgae options:NSJSONReadingMutableLeaves error:nil];
    MQTTCommandModel *commandModel = [MQTTCommandModel mj_objectWithKeyValues:payload];
    if ([commandModel.cmd isEqualToString:@"UserRequestService"]||([commandModel.cmd isEqualToString:@"RequestSwitchService"])) {
        UINavigationController  *nav = self.tabBarController.viewControllers[0];
        YHMessageListViewController *vc = nav.viewControllers[0];
        chatNewModel *model = [chatNewModel mj_objectWithKeyValues:commandModel.message_last];
        chatBodyModel *body = [chatBodyModel mj_objectWithKeyValues:model.MessageBody];
        chatUserModel *form  = nil;
        SDChatMessage *Message = [[SDChatMessage alloc] init];
        Message.sendTime = [Tools stringFromTimestamp:model.Timestamp];
        if ([commandModel.cmd isEqualToString:@"RequestSwitchService"]) {
            form = [chatUserModel mj_objectWithKeyValues:commandModel.user_info];
            Message.staffType = form.UserType;
            Message.staffAvata = form.Avatar;
            if (form.DisplayName.length<=0 || form.DisplayName == nil) {
                Message.staffName = [NSString stringWithFormat:@"用户%@",[form.PhoneNumber substringFromIndex:form.PhoneNumber.length-4]];;
            }else{
                Message.staffName = form.DisplayName;
            }
            Message.phoneNumber = form.PhoneNumber;
            Message.userId = form.UserId;
            Message.isSwitchResponseMessage = YES;
            NSArray *array = [commandModel.customer_id componentsSeparatedByString:@"/"];
            if (array.count>1) {
                Message.switchCustomerServers = array[1];
            }
        }else{
            form = [chatUserModel mj_objectWithKeyValues:model.From];
            Message.staffType = form.UserType;
            Message.staffAvata = form.Avatar;
            if (form.DisplayName.length<=0 || form.DisplayName == nil) {
                Message.staffName = [NSString stringWithFormat:@"用户%@",[form.PhoneNumber substringFromIndex:form.PhoneNumber.length-4]];;
            }else{
                Message.staffName = form.DisplayName;
            }
            Message.phoneNumber = form.PhoneNumber;
            Message.userId = form.UserId;
            Message.isSwitchResponseMessage = false;
        }
        Message.msg = body.Text;
        Message.msgType = body.Type;
        Message.messageCount = @"0";
        Message.isResponseMessage = true;
        for (SDChatMessage *msg in vc.chatListArray) {
            if ([msg.userId isEqualToString:Message.userId] && msg.isResponseMessage) {
                [vc.chatListArray removeObject:msg];
                [vc.chatListArray insertObject:Message atIndex:0];
                [vc.tableView reloadData];
                return;
            }
        }
        [vc.chatListArray insertObject:Message atIndex:0];
        [vc.tableView reloadData];
    }
}
- (void)addMessageToFMDB:(NSDictionary *)message topic:(NSString *)topic{
    NSString *ServiceID = [NSString stringWithFormat:@"%@",[[NSUserDefaults standardUserDefaults] objectForKey:LOGIN_ServiceID]];
    NSString *clientId = [NSString stringWithFormat:@"customer/%@",ServiceID];
    chatNewModel *model = [chatNewModel mj_objectWithKeyValues:message];
    chatBodyModel *body = [chatBodyModel mj_objectWithKeyValues:model.MessageBody];
    chatUserModel *form = [chatUserModel mj_objectWithKeyValues:model.From];
    NSDictionary *dic = nil;
    NSString *timeString = [Tools stringFromTimestamp:model.Timestamp];
    NSString *sender = @"1";
    if ([form.ClientID isEqualToString:clientId]) {
        sender = @"1";
    }else{
        sender = @"0";
    }
    if (form.UserType.length <=0||form.UserType == nil) {
        form.UserType = @"";
    }
    if (form.PhoneNumber.length <=0||form.PhoneNumber == nil) {
        form.PhoneNumber = @"";
        form.DisplayName = [NSString stringWithFormat:@"客服：%@",form.DisplayName];
    }else{
        if (form.DisplayName.length <=0||form.DisplayName == nil) {
            form.DisplayName = [NSString stringWithFormat:@"用户%@",[form.PhoneNumber substringFromIndex:form.PhoneNumber.length-4]];
        }
    }
    
    if (form.Avatar.length <=0||form.Avatar == nil) {
        form.Avatar = @"";
    }
    if ([body.Type isEqualToString:@"Text"]) {
        dic = @{@"msg":body.Text,@"msgID":model.MessageID,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }else if ([body.Type isEqualToString:@"Image"]) {
        dic = @{@"msg":body.Image,@"msgID":model.MessageID,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }else if ([body.Type isEqualToString:@"Order"]) {
        dic = @{@"msg":body.Text,@"msgID":model.MessageID,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }else if ([body.Type isEqualToString:@"MutilePart"]) {

        YHChatContractModel *contractModel = [[YHChatContractModel alloc]init];
        contractModel.Text = body.Text;
        contractModel.Image = body.Image;
        contractModel.Url = body.Url;
        contractModel.Contract = body.Contract;
        contractModel.ContractType = body.ContractType;
        contractModel.ContractState = body.ContractState;
        dic = @{@"msg":[contractModel mj_JSONString],@"msgID":model,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }else if ([body.Type isEqualToString:@"Goods"]) {
        dic = @{@"msg":body.Text,@"msgID":model.MessageID,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }else if ([body.Type isEqualToString:@"Voice"]) {
        if (![[NSFileManager defaultManager] fileExistsAtPath:[Tools getVoicePath:model.MessageID]]) {
            NSData *data = [NSData dataWithContentsOfURL:[NSURL URLWithString:body.Voice]];
            if (data.bytes>0&&data) {
                [data writeToFile:[Tools getVoicePath:model.MessageID] atomically:YES];
            }
        }
        ChatVoiceModel *voicemodel = [[ChatVoiceModel alloc] init];
        voicemodel.duration = body.VoiceDuration;
        voicemodel.voicePath = body.Voice;
        dic = @{@"msg":[voicemodel mj_JSONString],@"msgID":model.MessageID,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }else if ([body.Type isEqualToString:@"File"]) {
        YHFileModel *fileModel = [YHFileModel mj_objectWithKeyValues:body.Text];
        fileModel.FilePath = body.Url;
        NSString *fileName = body.Url.lastPathComponent;
        NSString *jsonStr = [fileModel mj_JSONString];
        if (![[NSFileManager defaultManager] fileExistsAtPath:[Tools getPath:fileName]]) {
            NSData *data = [NSData dataWithContentsOfURL:[NSURL URLWithString:body.Url]];
            if (data&&data.bytes>0) {
                
            }
        }
        dic = @{@"msg":jsonStr,@"msgID":model.MessageID,@"sender":sender,@"sendTime":timeString,@"msgType":body.Type,@"staffName":form.DisplayName,@"staffAvata":form.Avatar,@"staffType":form.UserType,@"phoneNumber":form.PhoneNumber};
    }
    SDChatMessage *msg = [SDChatMessage chatMessageWithDic:dic];
    NSInteger count = 0;
    if (form.PhoneNumber.length <=0||form.PhoneNumber == nil) {
        count = [[FMDBManager sharedManager] getUserMessageCount:model.ToId];
    }else{
        count = [[FMDBManager sharedManager] getUserMessageCount:form.UserId];
    }
    
    
    if (form.PhoneNumber.length <=0||form.PhoneNumber == nil) {
        NSArray *arr = [topic componentsSeparatedByString:@"/"];
        if (arr.count < 2) {
            return;
        }
        NSString *user_id = arr[1];
        if ([[FMDBManager sharedManager] userChatDataIsExist:user_id]){
            if (![[FMDBManager sharedManager] messageIsAlreadyExist:user_id withMessageId:model.MessageID]) {
                count ++;
            }
        }
    }else{
        if ([[FMDBManager sharedManager] userChatDataIsExist:form.UserId]){
            if (![[FMDBManager sharedManager] messageIsAlreadyExist:form.UserId withMessageId:model.MessageID]) {
                count ++;
            }
        }
    }
    
    //处理聊天列表
    if (form.PhoneNumber.length <=0||form.PhoneNumber == nil) {
       //这里怎么处理
        NSArray *arr = [topic componentsSeparatedByString:@"/"];
        if (arr.count < 2) {
            return;
        }
        NSString *user_id = arr[1];
        if ([[FMDBManager sharedManager] userIsExist:user_id]) {
            NSString *jsonStr = [[FMDBManager sharedManager] getUserInfoFromUserList:user_id];
            if (jsonStr.length > 0) {
                SDChatMessage *ChatMessage = [SDChatMessage mj_objectWithKeyValues:jsonStr];
                ChatMessage.msg = msg.msg;
                ChatMessage.msgID = msg.msgID;
                ChatMessage.sender = msg.sender;
                ChatMessage.sendTime = msg.sendTime;
                ChatMessage.msgType = msg.msgType;
                ChatMessage.messageCount = [NSString stringWithFormat:@"%ld",(long)count];
                [[FMDBManager sharedManager] deleteUserList:user_id];
                [[FMDBManager sharedManager] addUserList:ChatMessage andUserID:user_id andMessageCount:count];
            }
        }else{
           //来的客服消息，但是用户列表不显示
        }

    }else{
        if ([[FMDBManager sharedManager] userIsExist:form.UserId]) {
            [[FMDBManager sharedManager] deleteUserList:form.UserId];
            [[FMDBManager sharedManager] addUserList:msg andUserID:form.UserId andMessageCount:count];
        }else{
            [[FMDBManager sharedManager] addUserList:msg andUserID:form.UserId andMessageCount:count];
        }
    }
    UINavigationController  *nav = self.tabBarController.viewControllers[0];
    YHMessageListViewController *vc = nav.viewControllers[0];
    NSMutableArray *resaponseArray = [NSMutableArray arrayWithCapacity:0];
    for (SDChatMessage *message in vc.chatListArray) {
        if (message.isResponseMessage) {
            [resaponseArray addObject:message];
        }
    }
    NSArray *messageListArray = [[FMDBManager sharedManager] getAllUserChatList];
    [resaponseArray addObjectsFromArray:messageListArray];
    vc.chatListArray = resaponseArray;
    [vc.tableView reloadData];
    //处理聊天数据
    if (form.PhoneNumber.length <=0||form.PhoneNumber == nil) {
        NSArray *arr = [topic componentsSeparatedByString:@"/"];
        if (arr.count < 2) {
            return;
        }
        NSString *user_id = arr[1];
        if ([[FMDBManager sharedManager] userChatDataIsExist:user_id]){
            if (![[FMDBManager sharedManager] messageIsAlreadyExist:user_id withMessageId:model.MessageID]) {
                [[FMDBManager sharedManager] addMessage:msg andUserID:user_id];
            }
            
        }else{
            [[FMDBManager sharedManager] initMessageChatDataWithUserID:user_id];
            if (![[FMDBManager sharedManager] messageIsAlreadyExist:user_id withMessageId:model.MessageID]) {
                [[FMDBManager sharedManager] addMessage:msg andUserID:user_id];
            }
        }
    }else{
        if ([[FMDBManager sharedManager] userChatDataIsExist:form.UserId]){
            if (![[FMDBManager sharedManager] messageIsAlreadyExist:form.UserId withMessageId:model.MessageID]) {
                [[FMDBManager sharedManager] addMessage:msg andUserID:form.UserId];
            }
            
        }else{
            [[FMDBManager sharedManager] initMessageChatDataWithUserID:form.UserId];
            if (![[FMDBManager sharedManager] messageIsAlreadyExist:form.UserId withMessageId:model.MessageID]) {
                [[FMDBManager sharedManager] addMessage:msg andUserID:form.UserId];
            }
        }
    }
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
